[package]
name = "wgpu-in-app"
authors = ["jinleili"]
version = "1.2.0"
edition = "2021"
rust-version = "1.83"

[lib]
crate-type = ["rlib", "staticlib", "cdylib"]

[features]
default = []
angle = ["wgpu/angle"]
vulkan-portability = ["wgpu/vulkan-portability"]

[dependencies.app_surface]
path = "../app-surface"
package = "app-surface"

[dependencies]
bytemuck.workspace = true
cfg-if.workspace = true
glam.workspace = true
log.workspace = true
noise.workspace = true
pollster.workspace = true
rand.workspace = true
wgpu.workspace = true
env_logger.workspace = true

[target.'cfg(any(target_os = "macos", target_os = "windows", target_os = "linux"))'.dependencies]
winit.workspace = true

[target.'cfg(target_vendor = "apple")'.dependencies]
libc.workspace = true

[target.'cfg(target_os = "android")'.dependencies]
android_logger.workspace = true
jni.workspace = true
jni_fn.workspace = true
log-panics = "*"

[target.'cfg(target_env = "ohos")'.dependencies]
napi-ohos = { workspace = true, features = ["napi8", "async"] }
napi-derive-ohos.workspace = true
openharmony-ability.workspace = true
openharmony-ability-derive.workspace = true

[target.'cfg(target_arch = "wasm32")'.dependencies]
web-sys = { workspace = true, features = [
    "Document",
    "Navigator",
    "Gpu",
    "GpuAdapter",
    "HtmlCanvasElement",
    "OffscreenCanvas",
    "Window",
] }
wasm-bindgen.workspace = true
js-sys.workspace = true
wasm-bindgen-futures.workspace = true
